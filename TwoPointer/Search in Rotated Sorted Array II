/*
https://leetcode.com/problems/search-in-rotated-sorted-array-ii/
*/
public class Solution {
    public bool Search(int[] nums, int target) {
        if(nums.Length==0)
            return false;
        int left=0,right=nums.Length-1;
        int mid;
       
        
        while(nums[left]==nums[right] && left<right)
        {
            
            if(nums[left]==target)
               return true;
            left++;
            right--;
        
        }
        Console.WriteLine(left);
        Console.WriteLine(right);
        while(left<=right)
        {
            mid=left+(right-left)/2;
            Console.WriteLine(nums[mid]);
            
            if(nums[mid]==target)
                 return true;            
            if(nums[left]<=nums[mid])
            {
                if(target>=nums[left] && target<nums[mid])
                    right=mid-1;
                else
                    left=mid+1;
            }
            else
            {                               
                if(target>nums[mid]&&target<=nums[right])
                    left=mid+1;
                else
                    right=mid-1;
            }
        }
        return false;
        
    }
}
