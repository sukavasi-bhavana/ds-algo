/*
https://leetcode.com/problems/roman-to-integer/
*/
public class Solution {
    public int RomanToInt(string s) {
        int digit = 0;
            int i = 0;
                     
            while (i<s.Length)
            {
                switch (s[i])
                {
                    case 'I':
                        if ((i<=s.Length-2)&&(s[i + 1] == 'V' || s[i + 1] == 'X'))
                        {
                            digit = s[i + 1] == 'V' ? digit + 4 : digit + 9;
                            i = i + 2;
                        }

                        else
                        {
                            digit = digit + 1;
                            i = i + 1;
                        }
                        break;
                    case 'V':
                        digit = digit + 5;
                        i = i + 1;
                        break;
                    case 'X':
                        if ((i<=s.Length-2)&&(s[i + 1] == 'L' || s[i + 1] == 'C'))
                        {
                            digit = s[i + 1] == 'L' ? digit + 40 : digit + 90;
                            i = i + 2;
                        }
                        else
                        {
                            digit = digit + 10;
                            i = i + 1;
                        }
                        break;
                    case 'L':
                        digit = digit + 50;
                        i = i + 1;
                        break;
                    case 'C':
                        if ((i<=s.Length-2)&&(s[i + 1] == 'D' || s[i + 1] == 'M'))
                        {
                            digit = s[i + 1] == 'D' ? digit + 400 : digit + 900;
                            i = i + 2;
                        }
                        else
                        {
                            digit = digit + 100;
                            i = i + 1;
                        }
                        break;
                    case 'D':
                        digit = digit + 500;
                        i = i + 1;
                        break;
                    case 'M':
                        digit = digit + 1000;
                        i = i + 1;
                        break;
                }
            }
           return digit;

    }
}
