/*
https://leetcode.com/problems/path-sum-ii/
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<IList<int>> PathSum(TreeNode root, int sum) {
        IList<IList<int>> res=new List<IList<int>>();
        List<int> path=new List<int>();
        helper(root,sum,res,path);
        return res;      
        
    }
    public void helper(TreeNode root, int sum, IList<IList<int>> res,List<int> path)
    {
        if(root==null)
            return;
       
        path.Add(root.val);
        if(root.left==null && root.right==null && root.val==sum)
        {
            res.Add(path);
        }
        helper(root.left,sum-root.val,res,new List<int>(path));
        helper(root.right,sum-root.val,res,new List<int>(path));
        
    }
}
