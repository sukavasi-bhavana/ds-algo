/*
https://leetcode.com/problems/sum-of-left-leaves/
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int SumOfLeftLeaves(TreeNode root) {
          int res=0;
        if(root==null)
            return res;
        Queue<TreeNode> q=new Queue<TreeNode>();
        q.Enqueue(root);
       // int x=0;
        while(q.Count>0)
        {
            int size=q.Count;
            while(size>0)
            {
                TreeNode cur=q.Dequeue();
                
                
                if(cur.left!=null){
                   
                    if(cur.left.left==null && cur.left.right==null)                        
                        res=res+cur.left.val;
                     q.Enqueue(cur.left);
                    
                }
                
                if(cur.right!=null)
                    q.Enqueue(cur.right);
                    
                size--;
            }
        }
        return res;
    }
}
