/*
https://leetcode.com/problems/n-ary-tree-level-order-traversal/
*/
/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
    public IList<IList<int>> LevelOrder(Node root) {
   IList<IList<int>> res=new List<IList<int>>();
        if(root==null)
            return res;
        Queue<Node> q=new Queue<Node>();
        q.Enqueue(root);      
        while(q.Count>0)
        {
            int size=q.Count;            
            List<int> x=new List<int>();
            while(size>0)
            {
                var cur=q.Dequeue();
                x.Add(cur.val);
                
                foreach(var child in cur.children)
                {
                    q.Enqueue(child);                  
                    
                }         
               
                size--;
            }
            res.Add(x);
            
        }
        return res;
    }
}
