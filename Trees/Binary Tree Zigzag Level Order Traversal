/*
https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<IList<int>> ZigzagLevelOrder(TreeNode root) {
        IList<IList<int>> ans = new List<IList<int>>();
        
        if(root == null)
            return ans;
        Queue<TreeNode> q=new Queue<TreeNode>();
        q.Enqueue(root);
        int height=0;
        while(q.Count>0)
        {
            List<int> level=new List<int>();
            int cap=q.Count;
            while(cap>0)
            {
                TreeNode cur=q.Dequeue();
                level.Add(cur.val);
                if(cur.left!=null)
                   q.Enqueue(cur.left);
                if(cur.right!=null)
                    q.Enqueue(cur.right);
                cap--;
                }
            
            height++;
            if(height%2==0)
                level.Reverse();
            ans.Add(level);
            
                
        }
        return ans;
        
    }
}
